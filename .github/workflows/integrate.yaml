name: "Integrate"

on:
  pull_request: null
  push: null

jobs:
  code-coverage:
    name: "Code Coverage"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "xdebug"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-progress"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        env:
          XDEBUG_MODE: "coverage"
        run: "vendor/bin/phpunit --colors=always --coverage-clover=.build/phpunit/logs/clover.xml"

      - name: "Send code coverage report to codecov.io"
        uses: "codecov/codecov-action@v5"
        with:
          files: ".build/phpunit/logs/clover.xml"

  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Create cache directory for friendsofphp/php-cs-fixer"
        run: "mkdir -p .build/php-cs-fixer"

      - name: "Run friendsofphp/php-cs-fixer"
        run: ".phive/php-cs-fixer fix --ansi --diff --dry-run --verbose"

  dependency-analysis:
    name: "Dependency Analysis"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-progress"

      - name: "Run maglnet/composer-require-checker"
        run: ".phive/composer-require-checker check --config-file=$(pwd)/composer-require-checker.json"

  phar:
    name: "Phar"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-dev --no-progress"

      - name: "Validate box.json.dist with humbug/box"
        run: ".phive/box validate"

      - name: "Compile twigcs.phar with humbug/box"
        run: ".phive/box compile"

      - name: "Show twigcs.phar version"
        run: "php twigcs.phar --version"

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-progress"

      - name: "Run phpstan/phpstan"
        run: ".phive/phpstan --ansi --configuration=phpstan.neon --memory-limit=-1"

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-progress"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --colors=always --testsuite=unit"

      - name: "Run functional tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --colors=always --testsuite=functional"
