name: "Integrate"

on:
  pull_request: null
  push: null

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: ".phive/php-cs-fixer fix --ansi --diff --dry-run --verbose"

  dependency-analysis:
    name: "Dependency Analysis"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-progress"

      - name: "Run maglnet/composer-require-checker"
        run: ".phive/composer-require-checker check --config-file=$(pwd)/composer-require-checker.json"

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies with composer"
        run: "composer install --ansi --no-progress"

      - name: "Run tests with phpunit/phpunit"
        run: "vendor/bin/phpunit"
